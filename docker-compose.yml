version: "3.8"

services:
  # MySQL база данных
  mysql:
    image: mysql:8.0
    container_name: petanque-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: petanque_root_password
      MYSQL_DATABASE: petanque_rating
      MYSQL_USER: petanque_user
      MYSQL_PASSWORD: petanque_password
    command: --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=256M
      --innodb-log-file-size=64M
      --innodb-lock-wait-timeout=50
      --innodb-rollback-on-timeout=OFF
      --max-connections=100
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - petanque-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: petanque-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=petanque_user
      - DB_PASSWORD=petanque_password
      - DB_NAME=petanque_rating
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123
      - FRONTEND_URL=http://localhost:3000
      - GOOGLE_SHEETS_API_KEY=AIzaSyCyoQvLzeRZmnPBq2EklQQTN9Ns1w2-Pg4
    ports:
      - "3001:3001"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - petanque-network
    volumes:
      - ./uploads:/app/uploads

  # Frontend приложение
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://localhost:3001/api
    container_name: petanque-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - petanque-network

  # Nginx для проксирования (опционально, для production)
  nginx:
    image: nginx:alpine
    container_name: petanque-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - petanque-network
    profiles:
      - production

volumes:
  mysql_data:
    driver: local

networks:
  petanque-network:
    driver: bridge
