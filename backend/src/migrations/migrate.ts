import { pool } from "../config/database";
import { addPointsToTournamentResultsAndDropPTP } from "./add-points-to-tournament-results-and-drop-ptp";
import { populateGender } from "./populate-gender";
import { updateGender } from "./update-gender";
import { linkLicensedPlayersWithPlayers } from "./link-licensed-players";
import { removePlayersWithInitials } from "./remove-players-with-initials";

/**
 * –ú–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Å —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ë–î
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç —Ç–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç –ª–æ–≥–∏–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
export const runMigrations = async () => {
  try {
    console.log("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ë–î...");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã
    const [tables] = await pool.execute(`
      SELECT TABLE_NAME 
      FROM information_schema.TABLES 
      WHERE TABLE_SCHEMA = DATABASE() 
      AND TABLE_NAME IN ('players', 'tournaments', 'teams', 'tournament_results')
    `);

    if ((tables as any[]).length < 4) {
      throw new Error(
        "–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ init-database.sql"
      );
    }

    console.log("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞–π–¥–µ–Ω—ã");

    // –í—ã–ø–æ–ª–Ω—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫—É—é –º–∏–≥—Ä–∞—Ü–∏—é —Å—Ç—Ä—É–∫—Ç—É—Ä—ã/–¥–∞–Ω–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞ –æ—á–∫–æ–≤
    console.log(
      "üß± –ú–∏–≥—Ä–∞—Ü–∏—è: –ø–µ—Ä–µ–Ω–æ—Å points –≤ tournament_results –∏ —É–¥–∞–ª–µ–Ω–∏–µ player_tournament_points..."
    );
    await addPointsToTournamentResultsAndDropPTP();
    console.log("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –æ—á–∫–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞");

    // –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–∏, —Ç—Ä–µ–±—É—é—â–∏–µ –ª–æ–≥–∏–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    console.log("üöª –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–∞ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–≥—Ä–æ–∫–æ–≤...");
    await populateGender();

    // console.log("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–∞ –∏–≥—Ä–æ–∫–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º...");
    // await updateGender();

    console.log(
      "üîó –°–≤—è–∑—ã–≤–∞–Ω–∏–µ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ–π players..."
    );
    await linkLicensedPlayersWithPlayers();

    console.log("üßπ –£–¥–∞–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤ —Å –∏–Ω–∏—Ü–∏–∞–ª–∞–º–∏ –≤–º–µ—Å—Ç–æ –∏–º–µ–Ω–∏...");
    await removePlayersWithInitials();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∞–∑–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    const [settings] = await pool.execute(
      "SELECT COUNT(*) as count FROM rating_settings WHERE setting_name IN ('best_results_count', 'current_season')"
    );

    if ((settings as any[])[0].count < 2) {
      console.log("üå± –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...");
      await pool.execute(`
        INSERT IGNORE INTO rating_settings (setting_name, setting_value, description) VALUES 
          ('best_results_count', '8', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞'),
          ('current_season', '2025', '–¢–µ–∫—É—â–∏–π —Å–µ–∑–æ–Ω')
      `);
    }

    console.log("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π:", error);
    throw error;
  }
};

// –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  runMigrations()
    .then(() => {
      console.log("–ú–∏–≥—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã");
      process.exit(0);
    })
    .catch((error) => {
      console.error("–û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π:", error);
      process.exit(1);
    });
}
