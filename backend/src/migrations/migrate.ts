import { pool } from "../config/database";
import fs from "fs";
import path from "path";

/**
 * –°–∏—Å—Ç–µ–º–∞ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (TypeScript)
 *
 * –ú–∏–≥—Ä–∞—Ü–∏–∏ —Å–∞–º–æ–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–µ - –∫–∞–∂–¥–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–∞–º–∞, –Ω—É–∂–Ω–æ –ª–∏ –µ–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å.
 * –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π.
 *
 * –î–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç:
 * 1. –ü—Ä–æ–≤–µ—Ä–∫—É –Ω–∞–ª–∏—á–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
 * 2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö TypeScript –º–∏–≥—Ä–∞—Ü–∏–π –∏–∑ –ø–∞–ø–∫–∏ migrations/
 * 3. –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç)
 *
 * –ó–∞–ø—É—Å–∫: npm run check-db
 */

interface Migration {
  up: (pool: any) => Promise<void>;
  down?: (pool: any) => Promise<void>;
}

/**
 * –ü—Ä–∏–º–µ–Ω–∏—Ç—å TypeScript –º–∏–≥—Ä–∞—Ü–∏—é
 */
const applyMigration = async (migrationPath: string, migrationName: string) => {
  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º TypeScript –º–∏–≥—Ä–∞—Ü–∏—é
    const migration: Migration = await import(migrationPath);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ up
    if (typeof migration.up !== "function") {
      throw new Error(`–ú–∏–≥—Ä–∞—Ü–∏—è ${migrationName} –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏—é up()`);
    }

    // –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é (–æ–Ω–∞ —Å–∞–º–∞ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ)
    await migration.up(pool);
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ ${migrationName}:`, error);
    throw error;
  }
};

/**
 * –ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏
 */
const applyMigrations = async () => {
  const migrationsDir = __dirname;
  const files = fs
    .readdirSync(migrationsDir)
    .filter((file) => {
      // –ò—â–µ–º TypeScript —Ñ–∞–π–ª—ã –º–∏–≥—Ä–∞—Ü–∏–π (–Ω–µ migrate.ts)
      return (
        (file.endsWith(".ts") || file.endsWith(".js")) &&
        file !== "migrate.ts" &&
        file !== "migrate.js" &&
        !file.endsWith(".d.ts") &&
        /^\d{3}_/.test(file) // –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ç—Ä–µ—Ö —Ü–∏—Ñ—Ä
      );
    })
    .sort(); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ

  if (files.length === 0) {
    console.log("üìã –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
    return;
  }

  console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –º–∏–≥—Ä–∞—Ü–∏–π: ${files.length}`);

  for (const file of files) {
    const migrationPath = path.join(migrationsDir, file);
    const migrationName = file.replace(/\.(ts|js)$/, ""); // –£–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ

    console.log(`üìù –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏: ${migrationName}...`);
    await applyMigration(migrationPath, migrationName);
  }

  console.log("‚úÖ –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã");
};

export const runMigrations = async () => {
  try {
    console.log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î...");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã
    const [tables] = await pool.execute(`
      SELECT TABLE_NAME 
      FROM information_schema.TABLES 
      WHERE TABLE_SCHEMA = DATABASE() 
      AND TABLE_NAME IN ('players', 'tournaments', 'teams', 'tournament_results')
    `);

    if ((tables as any[]).length < 4) {
      throw new Error(
        "–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ mysql/init/01-init.sql"
      );
    }

    console.log("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ë–î –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ (–æ–Ω–∏ —Å–∞–º–æ–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–µ)
    await applyMigrations();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∞–∑–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω—ã –≤ 01-init.sql, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –ø—Ä–æ–≤–µ—Ä–∏–º)
    const [settings] = await pool.execute(
      "SELECT COUNT(*) as count FROM rating_settings WHERE setting_name IN ('best_results_count', 'current_season')"
    );

    if ((settings as any[])[0].count < 2) {
      console.log("üå± –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...");
      await pool.execute(`
        INSERT IGNORE INTO rating_settings (setting_name, setting_value, description) VALUES 
          ('best_results_count', '8', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞'),
          ('current_season', '2025', '–¢–µ–∫—É—â–∏–π —Å–µ–∑–æ–Ω')
      `);
    }

    console.log("‚úÖ –ë–î –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ë–î:", error);
    throw error;
  }
};

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  runMigrations()
    .then(() => {
      console.log("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ");
      process.exit(0);
    })
    .catch((error) => {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î:", error);
      process.exit(1);
    });
}
