import { pool } from "../config/database";

/**
 * –ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è wins (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥) –≤ —Ç–∞–±–ª–∏—Ü—É tournament_results
 */
const addWinsColumnMigration = async () => {
  try {
    console.log(
      "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–∞ wins –≤ —Ç–∞–±–ª–∏—Ü–µ tournament_results..."
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ wins
    const [columns] = await pool.execute<any[]>("DESCRIBE tournament_results");

    const winsColumnExists = columns.some((col: any) => col.Field === "wins");

    if (!winsColumnExists) {
      console.log("üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ wins...");

      // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü wins
      await pool.execute(`
        ALTER TABLE tournament_results 
        ADD COLUMN wins INT DEFAULT 0 AFTER cup
      `);

      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è wins
      await pool.execute(`
        ALTER TABLE tournament_results 
        ADD INDEX idx_wins (wins)
      `);

      console.log(
        "‚úÖ –°—Ç–æ–ª–±–µ—Ü wins —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü—É tournament_results"
      );
    } else {
      console.log("‚úì –°—Ç–æ–ª–±–µ—Ü wins —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ tournament_results");
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    const [finalColumns] = await pool.execute<any[]>(
      "DESCRIBE tournament_results"
    );

    console.log("üìã –¢–µ–∫—É—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã tournament_results:");
    finalColumns.forEach((col: any) => {
      console.log(
        `  - ${col.Field}: ${col.Type} ${
          col.Null === "YES" ? "NULL" : "NOT NULL"
        } ${col.Default ? `DEFAULT ${col.Default}` : ""}`
      );
    });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è —Å—Ç–æ–ª–±—Ü–∞ wins:", error);
    throw error;
  }
};

export const runAddWinsColumnMigration = addWinsColumnMigration;
