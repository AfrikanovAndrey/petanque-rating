import { pool } from "../config/database";

/**
 * –ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏–Ω–¥–µ–∫—Å–æ–≤ —Ç–∞–±–ª–∏—Ü—ã player_tournament_points
 * –î–æ–±–∞–≤–ª—è–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
 */
export async function optimizePlayerPointsIndexes(): Promise<void> {
  const connection = await pool.getConnection();

  try {
    await connection.beginTransaction();
    console.log(
      "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –∏–Ω–¥–µ–∫—Å–æ–≤ —Ç–∞–±–ª–∏—Ü—ã player_tournament_points..."
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    const [tables] = await connection.execute(`
      SHOW TABLES LIKE 'player_tournament_points'
    `);

    if ((tables as any[]).length === 0) {
      console.log(
        "‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ player_tournament_points –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é"
      );
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–Ω–¥–µ–∫—Å—ã
    const [existingIndexes] = await connection.execute(`
      SHOW INDEX FROM player_tournament_points
    `);

    const indexNames = (existingIndexes as any[]).map(
      (idx: any) => idx.Key_name
    );

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–Ω–¥–µ–∫—Å—ã
    if (!indexNames.includes("idx_player_tournament_points")) {
      console.log("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å idx_player_tournament_points...");
      await connection.execute(`
        CREATE INDEX idx_player_tournament_points
        ON player_tournament_points (player_id, tournament_id, points)
      `);
    }

    if (!indexNames.includes("idx_tournament_created")) {
      console.log("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å idx_tournament_created...");
      await connection.execute(`
        CREATE INDEX idx_tournament_created
        ON player_tournament_points (tournament_id, created_at)
      `);
    }

    // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–Ω–¥–µ–∫—Å—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    console.log("‚úì –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");

    await connection.commit();
    console.log(
      "‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ —Ç–∞–±–ª–∏—Ü—ã player_tournament_points –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    );
  } catch (error) {
    await connection.rollback();
    console.error("‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏–Ω–¥–µ–∫—Å–æ–≤:", error);
    throw error;
  } finally {
    connection.release();
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ migrate.ts
export { optimizePlayerPointsIndexes as migrate };
