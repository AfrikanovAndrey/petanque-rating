import { CupPosition } from "../types";
import { calculateWins, calculateLoses } from "../services/winsLosesCalculator";

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—á–∫–æ–≤ –∑–∞ –∫—É–±–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–∞–±–ª–∏—Ü–µ –†–§–ü
// –ö–ª—é—á: "category-cup_type-teams_range"
// –ó–Ω–∞—á–µ–Ω–∏–µ: Map<–ø–æ–∑–∏—Ü–∏—è, –æ—á–∫–∏>

type TeamsRange = "8-12" | "13-18" | "19-24" | "25-30" | "31-36" | "36+";
type TournamentCategory = "1" | "2"; // 1 - –≤—ã—Å—à–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è, 2 - –≤—Ç–æ—Ä–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
type CupPointsKey = `${TournamentCategory}-${string}-${TeamsRange}`;

export const CUP_POINTS: Map<CupPointsKey, Map<CupPosition, number>> = new Map([
  // –¢–£–†–ù–ò–†–´ 1 –ö–ê–¢–ï–ì–û–†–ò–ò

  // –ö—É–±–æ–∫ A, 8-12 –∫–æ–º–∞–Ω–¥
  [
    "1-A-8-12",
    new Map([
      [CupPosition.WINNER, 10], // –ü
      [CupPosition.RUNNER_UP, 8], // –§
      [CupPosition.SEMI_FINAL, 6], // 1/2
      [CupPosition.QUARTER_FINAL, 5], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ A, 13-18 –∫–æ–º–∞–Ω–¥
  [
    "1-A-13-18",
    new Map([
      [CupPosition.WINNER, 11], // –ü
      [CupPosition.RUNNER_UP, 9], // –§
      [CupPosition.SEMI_FINAL, 7], // 1/2
      [CupPosition.QUARTER_FINAL, 6], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ A, 19-24 –∫–æ–º–∞–Ω–¥—ã
  [
    "1-A-19-24",
    new Map([
      [CupPosition.WINNER, 12], // –ü
      [CupPosition.RUNNER_UP, 10], // –§
      [CupPosition.SEMI_FINAL, 8], // 1/2
      [CupPosition.QUARTER_FINAL, 7], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ A, 25-30 –∫–æ–º–∞–Ω–¥
  [
    "1-A-25-30",
    new Map([
      [CupPosition.WINNER, 13], // –ü
      [CupPosition.RUNNER_UP, 11], // –§
      [CupPosition.SEMI_FINAL, 9], // 1/2
      [CupPosition.QUARTER_FINAL, 8], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ A, 31-36 –∫–æ–º–∞–Ω–¥
  [
    "1-A-31-36",
    new Map([
      [CupPosition.WINNER, 14], // –ü
      [CupPosition.RUNNER_UP, 12], // –§
      [CupPosition.SEMI_FINAL, 10], // 1/2
      [CupPosition.QUARTER_FINAL, 9], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ A, >36 –∫–æ–º–∞–Ω–¥
  [
    "1-A-36+",
    new Map([
      [CupPosition.WINNER, 16], // –ü
      [CupPosition.RUNNER_UP, 14], // –§
      [CupPosition.SEMI_FINAL, 12], // 1/2
      [CupPosition.QUARTER_FINAL, 11], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ –ë, 13-18 –∫–æ–º–∞–Ω–¥ (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 13 –∫–æ–º–∞–Ω–¥)
  [
    "1-B-13-18",
    new Map([
      [CupPosition.WINNER, 5], // –ü
      [CupPosition.RUNNER_UP, 4], // –§
    ]),
  ],

  // –ö—É–±–æ–∫ –ë, 19-24 –∫–æ–º–∞–Ω–¥—ã
  [
    "1-B-19-24",
    new Map([
      [CupPosition.WINNER, 6], // –ü
      [CupPosition.RUNNER_UP, 5], // –§
      [CupPosition.SEMI_FINAL, 4], // 1/2
    ]),
  ],

  // –ö—É–±–æ–∫ –ë, 25-30 –∫–æ–º–∞–Ω–¥
  [
    "1-B-25-30",
    new Map([
      [CupPosition.WINNER, 7], // –ü
      [CupPosition.RUNNER_UP, 6], // –§
      [CupPosition.SEMI_FINAL, 5], // 1/2
      [CupPosition.QUARTER_FINAL, 4], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ –ë, 31-36 –∫–æ–º–∞–Ω–¥
  [
    "1-B-31-36",
    new Map([
      [CupPosition.WINNER, 8], // –ü
      [CupPosition.RUNNER_UP, 7], // –§
      [CupPosition.SEMI_FINAL, 6], // 1/2
      [CupPosition.QUARTER_FINAL, 5], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ –ë, >36 –∫–æ–º–∞–Ω–¥
  [
    "1-B-36+",
    new Map([
      [CupPosition.WINNER, 9], // –ü
      [CupPosition.RUNNER_UP, 8], // –§
      [CupPosition.SEMI_FINAL, 7], // 1/2
      [CupPosition.QUARTER_FINAL, 6], // 1/4
    ]),
  ],

  // –¢–£–†–ù–ò–†–´ 2 –ö–ê–¢–ï–ì–û–†–ò–ò

  // –ö—É–±–æ–∫ A, 8-12 –∫–æ–º–∞–Ω–¥
  [
    "2-A-8-12",
    new Map([
      [CupPosition.WINNER, 6], // –ü
      [CupPosition.RUNNER_UP, 5], // –§
      [CupPosition.SEMI_FINAL, 4], // 1/2
      [CupPosition.QUARTER_FINAL, 3], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ A, 13-18 –∫–æ–º–∞–Ω–¥
  [
    "2-A-13-18",
    new Map([
      [CupPosition.WINNER, 7], // –ü
      [CupPosition.RUNNER_UP, 6], // –§
      [CupPosition.SEMI_FINAL, 5], // 1/2
      [CupPosition.QUARTER_FINAL, 4], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ A, 19-24 –∫–æ–º–∞–Ω–¥—ã
  [
    "2-A-19-24",
    new Map([
      [CupPosition.WINNER, 8], // –ü
      [CupPosition.RUNNER_UP, 7], // –§
      [CupPosition.SEMI_FINAL, 6], // 1/2
      [CupPosition.QUARTER_FINAL, 5], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ A, 25-30 –∫–æ–º–∞–Ω–¥
  [
    "2-A-25-30",
    new Map([
      [CupPosition.WINNER, 9], // –ü
      [CupPosition.RUNNER_UP, 8], // –§
      [CupPosition.SEMI_FINAL, 7], // 1/2
      [CupPosition.QUARTER_FINAL, 6], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ A, 31-36 –∫–æ–º–∞–Ω–¥
  [
    "2-A-31-36",
    new Map([
      [CupPosition.WINNER, 10], // –ü
      [CupPosition.RUNNER_UP, 9], // –§
      [CupPosition.SEMI_FINAL, 8], // 1/2
      [CupPosition.QUARTER_FINAL, 7], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ A, >36 –∫–æ–º–∞–Ω–¥
  [
    "2-A-36+",
    new Map([
      [CupPosition.WINNER, 12], // –ü
      [CupPosition.RUNNER_UP, 11], // –§
      [CupPosition.SEMI_FINAL, 10], // 1/2
      [CupPosition.QUARTER_FINAL, 9], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ –ë, 13-18 –∫–æ–º–∞–Ω–¥—ã (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 13 –¥–ª—è 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
  [
    "2-B-13-18",
    new Map([
      [CupPosition.WINNER, 4], // –ü
      [CupPosition.RUNNER_UP, 3], // –§
    ]),
  ],

  // –ö—É–±–æ–∫ –ë, 19-24 –∫–æ–º–∞–Ω–¥—ã (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 19 –¥–ª—è 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
  [
    "2-B-19-24",
    new Map([
      [CupPosition.WINNER, 5], // –ü
      [CupPosition.RUNNER_UP, 4], // –§
      [CupPosition.SEMI_FINAL, 3], // 1/2
    ]),
  ],

  // –ö—É–±–æ–∫ –ë, 25-30 –∫–æ–º–∞–Ω–¥
  [
    "2-B-25-30",
    new Map([
      [CupPosition.WINNER, 6], // –ü
      [CupPosition.RUNNER_UP, 5], // –§
      [CupPosition.SEMI_FINAL, 4], // 1/2
      [CupPosition.QUARTER_FINAL, 3], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ –ë, 31-36 –∫–æ–º–∞–Ω–¥
  [
    "2-B-31-36",
    new Map([
      [CupPosition.WINNER, 6], // –ü
      [CupPosition.RUNNER_UP, 5], // –§
      [CupPosition.SEMI_FINAL, 4], // 1/2
      [CupPosition.QUARTER_FINAL, 3], // 1/4
    ]),
  ],

  // –ö—É–±–æ–∫ –ë, >36 –∫–æ–º–∞–Ω–¥
  [
    "2-B-36+",
    new Map([
      [CupPosition.WINNER, 7], // –ü
      [CupPosition.RUNNER_UP, 6], // –§
      [CupPosition.SEMI_FINAL, 5], // 1/2
      [CupPosition.QUARTER_FINAL, 4], // 1/4
    ]),
  ],
]);

/**
 * –ü–æ–ª—É—á–∏—Ç—å –æ—á–∫–∏ –∑–∞ –ø–æ–∑–∏—Ü–∏—é –≤ –∫—É–±–∫–µ
 * @param category - –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Ç—É—Ä–Ω–∏—Ä–∞ (1 –∏–ª–∏ 2)
 * @param cup - —Ç–∏–ø –∫—É–±–∫–∞ (A, B, C)
 * @param position - –ø–æ–∑–∏—Ü–∏—è –≤ –∫—É–±–∫–µ
 * @param totalTeams - –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥ –≤ —Ç—É—Ä–Ω–∏—Ä–µ
 * @param qualifyingRoundPoints - –æ—á–∫–∏, –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –≤ –æ—Ç–±–æ—Ä–æ—á–Ω–æ–º —Ç—É—Ä–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∫—É–±–∫–∞ C)
 * @returns –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤
 */
export function getCupPoints(
  category: "1" | "2",
  cup: "A" | "B" | "C",
  position: CupPosition,
  totalTeams: number,
  qualifyingRoundPoints: number = 0
): number {
  console.log(`üîç getCupPoints –≤—ã–∑–≤–∞–Ω–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:`, {
    category,
    cup,
    position,
    totalTeams,
    qualifyingRoundPoints,
  });

  // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫—É–±–∫–∞ C
  if (cup === "C") {
    let additionalPoints = 0;

    if (position === CupPosition.WINNER || position === CupPosition.RUNNER_UP) {
      // –§–∏–Ω–∞–ª–∏—Å—Ç—ã –∫—É–±–∫–∞ –° –ø–æ–ª—É—á–∞—é—Ç +2 –æ—á–∫–∞
      additionalPoints = 2;
    } else if (position === CupPosition.SEMI_FINAL) {
      // –ü–æ–ª—É—Ñ–∏–Ω–∞–ª–∏—Å—Ç—ã –∫—É–±–∫–∞ –° –ø–æ–ª—É—á–∞—é—Ç +1 –æ—á–∫–æ
      additionalPoints = 1;
    }

    const totalPoints = qualifyingRoundPoints + additionalPoints;

    console.log(
      `‚úÖ –ö—É–±–æ–∫ C: ${qualifyingRoundPoints} (–æ—Ç–±–æ—Ä–æ—á–Ω—ã–π) + ${additionalPoints} (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ) = ${totalPoints} –æ—á–∫–æ–≤`
    );

    return totalPoints;
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –∫–æ–º–∞–Ω–¥
  let teamsRange: TeamsRange;
  if (totalTeams <= 12) {
    teamsRange = "8-12";
  } else if (totalTeams <= 18) {
    teamsRange = "13-18";
  } else if (totalTeams <= 24) {
    teamsRange = "19-24";
  } else if (totalTeams <= 30) {
    teamsRange = "25-30";
  } else if (totalTeams <= 36) {
    teamsRange = "31-36";
  } else {
    teamsRange = "36+";
  }

  const key: CupPointsKey = `${category}-${cup}-${teamsRange}`;
  console.log(`üîë –ö–ª—é—á –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—á–∫–æ–≤: "${key}"`);

  const cupPointsMap = CUP_POINTS.get(key);

  if (!cupPointsMap) {
    console.warn(
      `‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ—á–∫–æ–≤ –¥–ª—è –∫—É–±–∫–∞ ${cup} –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category} —Å ${totalTeams} –∫–æ–º–∞–Ω–¥–∞–º–∏ (–∫–ª—é—á: ${key})`
    );
    console.log("üóÇÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª—é—á–∏:", Array.from(CUP_POINTS.keys()));
    return 0;
  }

  // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è 3 –º–µ—Å—Ç–∞
  if (position === CupPosition.THIRD_PLACE) {
    // –ó–∞ 3 –º–µ—Å—Ç–æ –¥–∞—ë—Ç—Å—è —Å—Ç–æ–ª—å–∫–æ –∂–µ –æ—á–∫–æ–≤, —Å–∫–æ–ª—å–∫–æ –∑–∞ –ø–æ–ª—É—Ñ–∏–Ω–∞–ª
    const semiFinalPoints = cupPointsMap.get(CupPosition.SEMI_FINAL);
    if (semiFinalPoints === undefined) {
      console.warn(`–ù–µ –Ω–∞–π–¥–µ–Ω—ã –æ—á–∫–∏ –∑–∞ –ø–æ–ª—É—Ñ–∏–Ω–∞–ª –¥–ª—è –∫—É–±–∫–∞ ${cup}`);
      return 0;
    }

    // –î–ª—è –∫—É–±–∫–∞ A —Ç—É—Ä–Ω–∏—Ä–æ–≤ 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è +1 –æ—á–∫–æ –∑–∞ –∏–≥—Ä—É –∑–∞ 3 –º–µ—Å—Ç–æ
    const bonusPoint = category === "1" && cup === "A" ? 1 : 0;
    const totalPoints = semiFinalPoints + bonusPoint;

    console.log(
      `‚úÖ –û—á–∫–∏ –∑–∞ 3 –º–µ—Å—Ç–æ –≤ –∫—É–±–∫–µ ${cup} –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category}: –ø–æ–ª—É—Ñ–∏–Ω–∞–ª ${semiFinalPoints} + –±–æ–Ω—É—Å ${bonusPoint} = ${totalPoints}`
    );

    return totalPoints;
  }

  const points = cupPointsMap.get(position);
  if (points === undefined) {
    console.warn(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –æ—á–∫–∏ –¥–ª—è –ø–æ–∑–∏—Ü–∏–∏ ${position} –≤ –∫—É–±–∫–µ ${cup}`);
    console.log("üóÇÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏:", Array.from(cupPointsMap.keys()));
    return 0;
  }

  console.log(
    `‚úÖ –ù–∞–π–¥–µ–Ω—ã –æ—á–∫–∏: ${points} –¥–ª—è –ø–æ–∑–∏—Ü–∏–∏ ${position} –≤ –∫—É–±–∫–µ ${cup}`
  );
  return points;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ—á–∫–æ–≤ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
 */
export function getAllCupPointsConfig(): Record<
  string,
  Record<string, number>
> {
  const result: Record<string, Record<string, number>> = {};

  CUP_POINTS.forEach((pointsMap, key) => {
    result[key] = {};
    pointsMap.forEach((points, position) => {
      result[key][position] = points;
    });
  });

  return result;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–º–µ—Ä —Ä–∞—Å—á–µ—Ç–∞ –æ—á–∫–æ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
 */
/**
 * –ü–æ–ª—É—á–∏—Ç—å –æ—á–∫–∏ –∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥ –∫–æ–º–∞–Ω–¥—ã
 * @param category - –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Ç—É—Ä–Ω–∏—Ä–∞ (1 –∏–ª–∏ 2)
 * @param qualifying_wins - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥ –∫–æ–º–∞–Ω–¥—ã
 * @returns –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ –∑–∞ –ø–æ–±–µ–¥—ã
 */
export function getPointsByQualifyingStage(
  category: "1" | "2",
  qualifying_wins: number
): number {
  console.log(`üèÜ getWinsPoints –≤—ã–∑–≤–∞–Ω–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:`, {
    category,
    qualifying_wins,
  });

  if (qualifying_wins === 0) {
    console.log(`‚úÖ 0 –ø–æ–±–µ–¥ = 0 –æ—á–∫–æ–≤`);
    return 0;
  }

  let points: number;

  if (qualifying_wins >= 3) {
    // –ë–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ —Ç—Ä—ë–º –ø–æ–±–µ–¥–∞–º
    points = category === "1" ? 3 : 2;
    console.log(
      `‚úÖ ${qualifying_wins} –ø–æ–±–µ–¥ (‚â•3) –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category} = ${points} –æ—á–∫–æ–≤`
    );
  } else if (qualifying_wins >= 1) {
    // 1-2 –ø–æ–±–µ–¥—ã
    points = category === "1" ? 2 : 1;
    console.log(
      `‚úÖ ${qualifying_wins} –ø–æ–±–µ–¥ (1-2) –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category} = ${points} –æ—á–∫–æ–≤`
    );
  } else {
    points = 0;
    console.log(`‚úÖ ${qualifying_wins} –ø–æ–±–µ–¥ = 0 –æ—á–∫–æ–≤`);
  }

  return points;
}

export function getPointsExample(): Record<string, any> {
  return {
    description:
      "–ü—Ä–∏–º–µ—Ä—ã –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –æ—á–∫–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–∞–±–ª–∏—Ü–µ –†–§–ü –∏ —Å–∏—Å—Ç–µ–º–µ –ø–æ–±–µ–¥",
    cupExamples: [
      {
        scenario: "16 –∫–æ–º–∞–Ω–¥, —Ç—É—Ä–Ω–∏—Ä 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ö—É–±–æ–∫ –ê, –ø–æ–±–µ–¥–∏—Ç–µ–ª—å",
        teams: 16,
        category: "1",
        cup: "A",
        position: "1",
        points: getCupPoints("1", "A", CupPosition.WINNER, 16),
      },
      {
        scenario: "24 –∫–æ–º–∞–Ω–¥—ã, —Ç—É—Ä–Ω–∏—Ä 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ö—É–±–æ–∫ –ë, –ø–æ–ª—É—Ñ–∏–Ω–∞–ª",
        teams: 24,
        category: "1",
        cup: "B",
        position: "1/2",
        points: getCupPoints("1", "B", CupPosition.SEMI_FINAL, 24),
      },
      {
        scenario: "40 –∫–æ–º–∞–Ω–¥, —Ç—É—Ä–Ω–∏—Ä 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ö—É–±–æ–∫ –ê, —Ñ–∏–Ω–∞–ª–∏—Å—Ç",
        teams: 40,
        category: "2",
        cup: "A",
        position: "2",
        points: getCupPoints("2", "A", CupPosition.RUNNER_UP, 40),
      },
      {
        scenario:
          "20 –∫–æ–º–∞–Ω–¥, —Ç—É—Ä–Ω–∏—Ä 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ö—É–±–æ–∫ –ê, 3 –º–µ—Å—Ç–æ (–ø–æ–ª—É—Ñ–∏–Ω–∞–ª + 1 –±–æ–Ω—É—Å)",
        teams: 20,
        category: "1",
        cup: "A",
        position: "3",
        points: getCupPoints("1", "A", CupPosition.THIRD_PLACE, 20),
        explanation:
          "3 –º–µ—Å—Ç–æ = –ø–æ–ª—É—Ñ–∏–Ω–∞–ª (8 –æ—á–∫–æ–≤) + –±–æ–Ω—É—Å –∑–∞ –∏–≥—Ä—É –∑–∞ 3 –º–µ—Å—Ç–æ (1 –æ—á–∫–æ) = 9 –æ—á–∫–æ–≤",
      },
      {
        scenario:
          "20 –∫–æ–º–∞–Ω–¥, —Ç—É—Ä–Ω–∏—Ä 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ö—É–±–æ–∫ –ë, 3 –º–µ—Å—Ç–æ (—Ç–æ–ª—å–∫–æ –ø–æ–ª—É—Ñ–∏–Ω–∞–ª)",
        teams: 20,
        category: "1",
        cup: "B",
        position: "3",
        points: getCupPoints("1", "B", CupPosition.THIRD_PLACE, 20),
        explanation: "3 –º–µ—Å—Ç–æ = –ø–æ–ª—É—Ñ–∏–Ω–∞–ª (4 –æ—á–∫–∞), –±–æ–Ω—É—Å —Ç–æ–ª—å–∫–æ –¥–ª—è –∫—É–±–∫–∞ –ê",
      },
      {
        scenario:
          "20 –∫–æ–º–∞–Ω–¥, —Ç—É—Ä–Ω–∏—Ä 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ö—É–±–æ–∫ –ê, 3 –º–µ—Å—Ç–æ (—Ç–æ–ª—å–∫–æ –ø–æ–ª—É—Ñ–∏–Ω–∞–ª)",
        teams: 20,
        category: "2",
        cup: "A",
        position: "3",
        points: getCupPoints("2", "A", CupPosition.THIRD_PLACE, 20),
        explanation:
          "3 –º–µ—Å—Ç–æ = –ø–æ–ª—É—Ñ–∏–Ω–∞–ª (6 –æ—á–∫–æ–≤), –±–æ–Ω—É—Å —Ç–æ–ª—å–∫–æ –¥–ª—è 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
      },
      {
        scenario: "20 –∫–æ–º–∞–Ω–¥, –∫—É–±–æ–∫ –°, —Ñ–∏–Ω–∞–ª–∏—Å—Ç (5 –æ—á–∫–æ–≤ –≤ –æ—Ç–±–æ—Ä–æ—á–Ω–æ–º —Ç—É—Ä–µ)",
        qualifyingRoundPoints: 5,
        cup: "C",
        position: "—Ñ–∏–Ω–∞–ª–∏—Å—Ç",
        points: getCupPoints("1", "C", CupPosition.RUNNER_UP, 20, 5),
        explanation:
          "–ö—É–±–æ–∫ –°: 5 (–æ—Ç–±–æ—Ä–æ—á–Ω—ã–π —Ç—É—Ä) + 2 (–±–æ–Ω—É—Å –∑–∞ —Ñ–∏–Ω–∞–ª) = 7 –æ—á–∫–æ–≤",
      },
      {
        scenario: "30 –∫–æ–º–∞–Ω–¥, –∫—É–±–æ–∫ –°, –ø–æ–ª—É—Ñ–∏–Ω–∞–ª–∏—Å—Ç (3 –æ—á–∫–∞ –≤ –æ—Ç–±–æ—Ä–æ—á–Ω–æ–º —Ç—É—Ä–µ)",
        qualifyingRoundPoints: 3,
        cup: "C",
        position: "–ø–æ–ª—É—Ñ–∏–Ω–∞–ª",
        points: getCupPoints("2", "C", CupPosition.SEMI_FINAL, 30, 3),
        explanation:
          "–ö—É–±–æ–∫ –°: 3 (–æ—Ç–±–æ—Ä–æ—á–Ω—ã–π —Ç—É—Ä) + 1 (–±–æ–Ω—É—Å –∑–∞ –ø–æ–ª—É—Ñ–∏–Ω–∞–ª) = 4 –æ—á–∫–∞",
      },
      {
        scenario:
          "25 –∫–æ–º–∞–Ω–¥, –∫—É–±–æ–∫ –°, —á–µ—Ç–≤–µ—Ä—Ç—å—Ñ–∏–Ω–∞–ª–∏—Å—Ç (2 –æ—á–∫–∞ –≤ –æ—Ç–±–æ—Ä–æ—á–Ω–æ–º —Ç—É—Ä–µ)",
        qualifyingRoundPoints: 2,
        cup: "C",
        position: "—á–µ—Ç–≤–µ—Ä—Ç—å—Ñ–∏–Ω–∞–ª",
        points: getCupPoints("1", "C", CupPosition.QUARTER_FINAL, 25, 2),
        explanation: "–ö—É–±–æ–∫ –°: 2 (–æ—Ç–±–æ—Ä–æ—á–Ω—ã–π —Ç—É—Ä) + 0 (–Ω–µ—Ç –±–æ–Ω—É—Å–∞) = 2 –æ—á–∫–∞",
      },
    ],
    winsExamples: [
      {
        scenario: "–¢—É—Ä–Ω–∏—Ä 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ–º–∞–Ω–¥–∞ —Å 5 –ø–æ–±–µ–¥–∞–º–∏",
        category: "1",
        qualifying_wins: 5,
        wins: calculateWins("QUALIFYING_HIGH", 5),
        loses: calculateLoses("QUALIFYING_HIGH", 5),
        points: getPointsByQualifyingStage("1", 5),
        explanation: "‚â•3 –ø–æ–±–µ–¥ –≤ 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ = 3 –æ—á–∫–∞",
      },
      {
        scenario: "–¢—É—Ä–Ω–∏—Ä 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ–º–∞–Ω–¥–∞ —Å 2 –ø–æ–±–µ–¥–∞–º–∏",
        category: "1",
        qualifying_wins: 2,
        wins: calculateWins("QUALIFYING_LOW", 2),
        loses: calculateLoses("QUALIFYING_LOW", 2),
        points: getPointsByQualifyingStage("1", 2),
        explanation: "1-2 –ø–æ–±–µ–¥—ã –≤ 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ = 2 –æ—á–∫–∞",
      },
      {
        scenario: "–¢—É—Ä–Ω–∏—Ä 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ–º–∞–Ω–¥–∞ —Å 4 –ø–æ–±–µ–¥–∞–º–∏",
        category: "2",
        qualifying_wins: 4,
        wins: calculateWins("QUALIFYING_HIGH", 4),
        loses: calculateLoses("QUALIFYING_HIGH", 4),
        points: getPointsByQualifyingStage("2", 4),
        explanation: "‚â•3 –ø–æ–±–µ–¥ –≤–æ 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ = 2 –æ—á–∫–∞",
      },
      {
        scenario: "–¢—É—Ä–Ω–∏—Ä 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ–º–∞–Ω–¥–∞ —Å 1 –ø–æ–±–µ–¥–æ–π",
        category: "2",
        qualifying_wins: 1,
        wins: calculateWins("QUALIFYING_LOW", 1),
        loses: calculateLoses("QUALIFYING_LOW", 1),
        points: getPointsByQualifyingStage("2", 1),
        explanation: "1-2 –ø–æ–±–µ–¥—ã –≤–æ 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ = 1 –æ—á–∫–æ",
      },
      {
        scenario: "–ö–æ–º–∞–Ω–¥–∞ –±–µ–∑ –ø–æ–±–µ–¥",
        category: "1",
        qualifying_wins: 0,
        wins: calculateWins("QUALIFYING_LOW", 0),
        loses: calculateLoses("QUALIFYING_LOW", 0),
        points: getPointsByQualifyingStage("1", 0),
        explanation: "0 –ø–æ–±–µ–¥ = 0 –æ—á–∫–æ–≤",
      },
    ],
    ranges: {
      "8-12": "8-12 –∫–æ–º–∞–Ω–¥",
      "13-18": "13-18 –∫–æ–º–∞–Ω–¥",
      "19-24": "19-24 –∫–æ–º–∞–Ω–¥—ã",
      "25-30": "25-30 –∫–æ–º–∞–Ω–¥",
      "31-36": "31-36 –∫–æ–º–∞–Ω–¥",
      "36+": "–±–æ–ª–µ–µ 36 –∫–æ–º–∞–Ω–¥",
    },
    categories: {
      "1": "–¢—É—Ä–Ω–∏—Ä—ã 1 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–≤—ã—Å—à–∞—è)",
      "2": "–¢—É—Ä–Ω–∏—Ä—ã 2 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
    },
  };
}
